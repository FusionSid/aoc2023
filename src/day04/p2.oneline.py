[(importlib := __import__("importlib")), (sys := importlib.import_module("sys")), (os := __import__("os", globals(), locals(), ["path"], 0)), (path := os.path), (rich := __import__("rich", globals(), locals(), ["print"], 0)), (print := rich.print), (solve := (lambda data: [(card_data := {}),(won := []),(cards := lambda n: list(range(n + 1, len(card_data[n]) + n + 1))),[[(line_data := line.lstrip("Card ").split(": ")),(card := line_data[0]),(numbers := list(map(lambda x: set(map(int, x.split())),line_data[1].split(" | "),))),(winning_numbers := numbers[0]), (my_numbers := numbers[1]), card_data.__setitem__(int(card), winning_numbers & my_numbers), won.extend(cards(int(card))),] for line in data], [won.extend(cards(w)) for w in won], print("Answer:", len(won) + len(card_data.keys())),])), [(use_test := (len(sys.argv) == 2 and sys.argv[-1] == "--test")), (input_path := path.join(path.dirname(__file__), "input.txt" if not use_test else "test.txt")), (data := open(input_path).read().split("\n")), solve(data)] if __name__ == "__main__" else ...]
