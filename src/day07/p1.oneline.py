((print := __import__("rich", globals(), locals(), ["print"], 0).print),(importlib := __import__("importlib")),(bisect := __import__("bisect")),(collections := __import__("collections")),(load_input := __import__("loader", globals(), locals(), ["load_input"], 0).load_input),(hand_type := lambda hand: [(return_val := []),(counter := collections.Counter(hand).values()),return_val.append(3) if list(counter).count(2) == 2 else ...,return_val.append(5) if set(counter) == {3, 2} else ..., [(return_val.append(_type) if amt in counter else ...) for amt, _type in {5: 7, 4: 6, 3: 4, 2: 2, 1: 1}.items()],return_val.pop(0)][-1]), (solve := (lambda data: [(hands := []),[[(ls := line.split()),(hand := ls[0]),(bid := int(ls[1])),(bisect.insort(hands, [hand, hand_type(hand), bid], key=lambda h: h[1])), ] for line in data],print(sum((x[2] * idx) for idx, x in enumerate(sorted(hands,key=lambda x: (x[1], [-("AKQJT98765432".index(c)) for c in x[0]],),), start=1)))])), load_input(__file__, solve) if __name__ == "__main__" else ...,)