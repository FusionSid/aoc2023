((math := __import__("math")),(print := __import__("rich", globals(), locals(), ["print"], 0).print),(load_input := __import__("loader", globals(), locals(), ["load_input"], 0).load_input),(solve := (lambda data: [(times := data[0]),(distances := data[1]),(races := zip(map(int, times.split(":")[1].split()),map(int, distances.split(":")[1].split()),)),(prod := 1),[[(discriminant := time_limit**2 - 4 * -1 * -record_to_beat),(root1 := math.ceil((-time_limit - math.sqrt(discriminant)) / (-2))),(root2 := math.floor((-time_limit + math.sqrt(discriminant)) / (-2))),(ways := root1 - root2 - 1),(prod := prod * ways),] for time_limit, record_to_beat in races], print(prod),])), load_input(__file__, solve) if __name__ == "__main__" else ...)
