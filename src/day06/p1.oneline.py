[ (importlib := __import__("importlib")), (sys := importlib.import_module("sys")), (ft := importlib.import_module("functools")), (os := __import__("os", globals(), locals(), ["path"], 0)), (path := os.path), (rich := __import__("rich", globals(), locals(), ["print"], 0)), (print := rich.print), ( solve := ( lambda data: [ ( races := zip( map(int, data[0].split(":")[1].split()), map(int, data[1].split(":")[1].split()), ) ), (amounts := []), [ [ (ways := 0), [ [ (speed := (time_limit - time)), (distance := (speed * time)), ( ways.__iadd__(1) if hasattr(ways, "__iadd__") else (ways := (ways + 1)) ) if distance > record_to_beat else ..., ] for time in range(1, time_limit) ], amounts.append(ways), ] for time_limit, record_to_beat in races ], print(ft.reduce(lambda x, y: x * y, amounts)), ] ) ), [ (use_test := (len(sys.argv) == 2 and sys.argv[-1] == "--test")), ( input_path := path.join( path.dirname(__file__), "input.txt" if not use_test else "test.txt" ) ), (data := open(input_path).read().split("\n")), solve(data), ] if __name__ == "__main__" else ..., ]
